FROM soulmachine/code-server:base

# Install common tools
RUN sudo apt -qy update && sudo apt -qy --no-install-recommends install \
   cmake \
   cmake-curses-gui \
   make \
   && sudo apt -qy autoremove && sudo apt clean && sudo rm -rf /var/lib/apt/lists/* && sudo rm -rf /tmp/*

# Available values: 9, 10, 11, 12, 13, 14, 15
ARG LLVM_VERSION=15
ARG USERNAME=coder

RUN echo "Installing LLVM toolchain" \
   && wget https://apt.llvm.org/llvm.sh \
   && chmod +x llvm.sh \
   && sudo ./llvm.sh $LLVM_VERSION \
   && rm ./llvm.sh \
   && sudo apt -qy update && sudo apt -qy --no-install-recommends install \
   clang-format-$LLVM_VERSION \
   clang-tidy-$LLVM_VERSION \
   && sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/clangd clangd /usr/bin/clangd-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/lld lld /usr/bin/lld-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/lldb lldb /usr/bin/lldb-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-$LLVM_VERSION 100 \
   && sudo update-alternatives --install /usr/bin/ld ld /usr/bin/lld-$LLVM_VERSION 100 \
   && echo "Installing vcpkg" \
   && git clone https://github.com/Microsoft/vcpkg.git \
   && ./vcpkg/bootstrap-vcpkg.sh \
   && sudo ln -s /home/$USERNAME/vcpkg/vcpkg /usr/local/bin/vcpkg \
   && sudo apt -qy autoremove && sudo apt clean && sudo rm -rf /var/lib/apt/lists/* && sudo rm -rf /tmp/*

# Install common C++ libraries
# https://cmake.org/cmake/help/latest/manual/cmake-modules.7.html#find-modules
RUN sudo apt -qy update && sudo apt -qy --no-install-recommends install \
   doxygen \
   graphviz \
   libstdc++-12-dev \
   libboost-dev \
   libgflags-dev \
   libgoogle-glog-dev \
   libgoogle-perftools-dev \
   libgtest-dev \
   liblzma-dev \
   libunwind-dev \
   zlib1g-dev \
   libssl-dev \
   && sudo apt -qy autoremove && sudo apt clean && sudo rm -rf /var/lib/apt/lists/* && sudo rm -rf /tmp/*

ENV CC=/usr/bin/clang
ENV CXX=/usr/bin/clang++
ENV LD=/usr/bin/lld
ENV CMAKE_EXPORT_COMPILE_COMMANDS=TRUE
ENV VCPKG_ROOT=/home/$USERNAME/vcpkg
ENV CMAKE_TOOLCHAIN_FILE=/home/$USERNAME/vcpkg/scripts/buildsystems/vcpkg.cmake

# vscode.cpptools has a bundled clang-format, see https://github.com/microsoft/vscode-cpptools/issues/6294
# vscode.cpptools has a bundled clang-tidy, see https://devblogs.microsoft.com/cppblog/visual-studio-code-c-december-2021-update-clang-tidy/
# vscode.cpptools also supports other clang tools, see https://github.com/microsoft/vscode-cpptools/issues/2908
# vscode does NOT support lldb yet https://github.com/microsoft/vscode-cpptools/issues/5415

RUN echo "Install vscode extensions" \
   && code-server --install-extension vadimcn.vscode-lldb \
   && code-server --install-extension cschlosser.doxdocgen \
   && code-server --install-extension ms-vscode.cpptools-extension-pack
